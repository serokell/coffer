# SPDX-FileCopyrightText: 2022 Serokell <https://serokell.io>
#
# SPDX-License-Identifier: MPL-2.0

name:                coffer
version:             0.1.0.0
#synopsis:
description:         A multi-backend, multi-frontend password manager, reaching out to Vault, pass among others.
homepage:            https://github.com/serokell/coffer/
license:             BSD3
author:              Serokell
maintainer:          Serokell <hi@serokell.io>
copyright:           2022 Serokell
category:            Command Line Tools
extra-source-files:
- README.md
- config.toml

dependencies:
  - base >= 4.14.3.0 && < 5

default-extensions:
  - AllowAmbiguousTypes
  - ApplicativeDo
  - BangPatterns
  - BlockArguments
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveAnyClass
  - DeriveDataTypeable
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DerivingStrategies
  - DerivingVia
  - EmptyCase
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - ImportQualifiedPost
  - LambdaCase
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - NegativeLiterals
  - NumDecimals
  - NumericUnderscores
  - OverloadedLabels
  - OverloadedStrings
  - PatternSynonyms
  - PolyKinds
  - QuantifiedConstraints
  - QuasiQuotes
  - RankNTypes
  - RecordWildCards
  - RecursiveDo
  - ScopedTypeVariables
  - StandaloneDeriving
  - StrictData
  - TemplateHaskell
  - TupleSections
  - TypeApplications
  - TypeFamilies
  - TypeOperators
  - UndecidableInstances
  - UndecidableSuperClasses
  - ViewPatterns

ghc-options:
  - -Weverything
  - -Wno-implicit-prelude
  - -Wno-name-shadowing
  - -Wno-missing-import-lists
  - -Wno-missing-export-lists
  - -Wno-unsafe
  - -Wno-safe
  - -Wno-missing-safe-haskell-mode
  - -Wno-prepositive-qualified-module
  - -Wno-monomorphism-restriction
  - -Wno-missed-specialisations
  - -Wno-all-missed-specialisations

library:
  source-dirs:      lib
  dependencies:
    - aeson
    - aeson-casing
    - ansi-terminal
    - bytestring
    - containers
    - exceptions
    - extra
    - fmt
    - hashable
    - http-client
    - http-client-tls
    - http-types
    - lens
    - lens-aeson
    - megaparsec
    - mtl
    - nyan-interpolation
    - optparse-applicative
    - polysemy
    - servant
    - servant-client
    - servant-client-core
    - servant-server
    - text
    - time
    - time-compat
    - tomland
    - unordered-containers
    - validation-selective
    - warp
    - optparse-applicative

executables:
  coffer:
    source-dirs:      app/cli
    main:             Main.hs
    dependencies:
      - coffer
      - fmt
      - lens
      - nyan-interpolation
      - optparse-applicative
      - polysemy
      - text
      - tomland

  coffer-server:
    source-dirs:      app/server
    main:             Main.hs
    dependencies:
      - coffer

tests:
  test:
    source-dirs:      tests/test
    main:             Main.hs
    build-tools:      tasty-discover:tasty-discover
    ghc-options:
      - -threaded
    dependencies:
      - tasty
  doctests:
    source-dirs:      tests/doctests
    main:             Doctests.hs
    ghc-options:
      - -threaded
      # `doctest` does not depend on `coffer` at compile-time, but it does
      # depend on it at runtime.
      # GHC will flag the `coffer` package as an unused dependency,
      # so we have to turn off that warning.
      - -Wno-unused-packages
    dependencies:
      - doctest-parallel
      - coffer
  server-integration:
    source-dirs:      tests/server-integration
    main:             Main.hs
    build-tools:      tasty-discover:tasty-discover
    ghc-options:
      - -threaded
    dependencies:
      - aeson
      - async
      - coffer
      - extra
      - http-client
      - http-types
      - lens
      - lens-aeson
      - process
      - req
      - syb
      - tasty
      - tasty-hunit
      - text
      - time
      - bytestring
